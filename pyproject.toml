[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ecologits"
version = "0.1.0"
description = "EcoLogits tracks and estimates the energy consumption and environmental impacts of using generative AI models through APIs."
authors = ["DataForGood"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<4"
openai = "^1.12.0"
wrapt = "^1.16.0"
pydantic = ">=2,<3"
mistralai = { version = "^0.1.3", optional = true }
anthropic = { version = "^0.18.1", optional = true }

[tool.poetry.extras]
mistralai = ["mistralai"]
anthropic = ["anthropic"]


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
pytest = "^7.2.0"
# ruff = "^0.0.254"
pytest-recording = "^0.13.1"
pytest-dotenv = "^0.5.2"
pytest-asyncio = "^0.23.6"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.12"


[pytest]
env_files = [".env"]


[tool.ruff]
select = [
    "A",
    "ANN",
    "ARG",
    "B",
    "C",
    "COM",
    "C90",
    "E",
    "ERA",
    "F",
    "I",
    "N",
    "PGH",
    "PL",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RUF",
    "SLF",
    "SIM",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT"
]

ignore = [
    "A003",
    "ANN101",
    "ANN102",
    "ANN401",
    "N805",
    "N818",
    "PLR0913",
    "RET504",
    "RET505",
    "COM812",
    "PTH"
]

fixable = [
    "A",
    "ANN",
    "ARG",
    "B",
    "C",
    "COM",
    "C90",
    "E",
    "ERA",
    "F",
    "I",
    "PGH",
    "PL",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RUF",
    "SLF",
    "SIM",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT"
]
unfixable = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
    "pages",
    "tests"
]

line-length = 120

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 10
